AC_INIT([Haskell GLUT package], [2.0], [sven.panne@aedion.de], [GLUT])

# Safety check: Ensure that we are in the correct source directory.
AC_CONFIG_SRCDIR([include/HsGLUT.h.in])

# The first file mentioned below will be generated by autoheader and contains
# defines which are needed during package build time only. The second header
# contains all kinds of stuff which is needed for using this package.
AC_CONFIG_HEADERS([include/HsGLUTConfig.h include/HsGLUT.h])

# We set this to "yes" later when we have found GLUT libs and headers.
GLUT_BUILD_PACKAGE=no
AC_SUBST([GLUT_BUILD_PACKAGE])

# Shall we build this package at all?
FP_ARG_GLUT

if test x"$enable_glut" = xyes; then

# Check for GLUT include paths and libraries
FP_CHECK_GLUT

if test "$GLUT_LIBS" = no; then
  AC_MSG_WARN([no GLUT library found, so this package will not be built])
else

# check for GLUT include files
glut_found_header=no
fp_save_cppflags="$CPPFLAGS"
CPPFLAGS="$CPPFLAGS $X_CFLAGS"
AC_CHECK_HEADERS([GL/glut.h GLUT/glut.h], [glut_found_header=yes])
CPPFLAGS="$fp_save_cppflags"

if test "$glut_found_header" = no; then
  AC_MSG_WARN([no GLUT header found, so this package will not be built])
else

GLUT_BUILD_PACKAGE=yes

AC_CHECK_HEADERS([windows.h])

AC_DEFINE_UNQUOTED([GLUT_EXTRA_LIBS],
  [`echo HSGLUT_cbits $GLUT_EXTRA_LIBS | sed -e 's/[[^ ]]*/,"&"/g' -e 's/^ *,//'`],
  [Extra libraries for GLUT, as a list of string literals.])

AC_DEFINE_UNQUOTED([GLUT_CFLAGS],
  [`echo '' $GLUT_CFLAGS | sed -e 's/-[[^ ]]*/,"&"/g' -e 's/^ *,//'`],
  [C flags for GLUT, as a list of string literals.])

AC_DEFINE_UNQUOTED([GLUT_LIBS],
  [`echo '' $GLUT_LIBS | sed -e 's/-[[^ ]]*/,"&"/g' -e 's/^ *,//'`],
  [Library flags for GLUT, as a list of string literals.])

AC_DEFINE_UNQUOTED([GLUT_FRAMEWORKS],
  [`echo '' $GLUT_FRAMEWORKS | sed -e 's/-[[^ ]]*/,"&"/g' -e 's/^ *,//'`],
  [Framework flags for GLUT, as a list of string literals.])

fi
fi
fi

if test "$GLUT_BUILD_PACKAGE" = yes; then
  BUILD_PACKAGE_BOOL=True
else
  BUILD_PACKAGE_BOOL=False
fi
AC_SUBST([BUILD_PACKAGE_BOOL])

case "$host" in
*-mingw32) CALLCONV=stdcall ;;
*)	CALLCONV=ccall ;;
esac
AC_SUBST([CALLCONV])

AC_CONFIG_FILES([config.mk GLUT.buildinfo])
AC_OUTPUT

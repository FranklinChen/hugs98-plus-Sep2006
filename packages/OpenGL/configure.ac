AC_INIT([Haskell OpenGL package], [2.1], [sven.panne@aedion.de], [OpenGL])

# Safety check: Ensure that we are in the correct source directory.
AC_CONFIG_SRCDIR([include/HsOpenGL.h.in])

# The first file mentioned below will be generated by autoheader and contains
# defines which are needed during package build time only. The second header
# contains all kinds of stuff which is needed for using this package.
AC_CONFIG_HEADERS([include/HsOpenGLConfig.h include/HsOpenGL.h])

# We set this to "yes" later when we have found OpenGL libs and headers.
GL_BUILD_PACKAGE=no
AC_SUBST([GL_BUILD_PACKAGE])

# Shall we build this package at all?
FP_ARG_OPENGL

if test x"$enable_opengl" != xno; then

# Check for OpenGL include paths and libraries
FP_CHECK_GLU

if test x"$GLU_LIBS" = xno; then
  AC_MSG_WARN([no OpenGL library found, so this package will not be built])
else

# check for OpenGL include files
gl_found_header=no
glu_found_header=no
fp_save_cppflags="$CPPFLAGS"
CPPFLAGS="$CPPFLAGS $X_CFLAGS"
AC_CHECK_HEADERS([GL/gl.h OpenGL/gl.h], [gl_found_header=yes])
AC_CHECK_HEADERS([GL/glu.h OpenGL/glu.h], [glu_found_header=yes])
CPPFLAGS="$fp_save_cppflags"

if test x"$gl_found_header" = xno || test x"$glu_found_header" = xno; then
  AC_MSG_WARN([no OpenGL headers found, so this package will not be built])
else

GL_BUILD_PACKAGE=yes

FPTOOLS_CHECK_HTYPE([GLboolean])
FPTOOLS_CHECK_HTYPE([GLbyte])
FPTOOLS_CHECK_HTYPE([GLubyte])
FPTOOLS_CHECK_HTYPE([GLshort])
FPTOOLS_CHECK_HTYPE([GLushort])
FPTOOLS_CHECK_HTYPE([GLint])
FPTOOLS_CHECK_HTYPE([GLuint])
FPTOOLS_CHECK_HTYPE([GLsizei])
FPTOOLS_CHECK_HTYPE([GLenum])
FPTOOLS_CHECK_HTYPE([GLbitfield])
FPTOOLS_CHECK_HTYPE([GLfloat])
FPTOOLS_CHECK_HTYPE([GLclampf])
FPTOOLS_CHECK_HTYPE([GLdouble])
FPTOOLS_CHECK_HTYPE([GLclampd])

AC_DEFINE_UNQUOTED([GLU_CFLAGS],
  [`echo '' $GLU_CFLAGS | sed -e 's/-[[^ ]]*/,"&"/g' -e 's/^ *,//'`],
  [C flags for GLU, as a list of string literals.])

AC_DEFINE_UNQUOTED([GLU_LIBS],
  [`echo '' $GLU_LIBS | sed -e 's/-[[^ ]]*/,"&"/g' -e 's/^ *,//'`],
  [Library flags for GLU, as a list of string literals.])

AC_DEFINE_UNQUOTED([GLU_FRAMEWORKS],
  [`echo '' $GLU_FRAMEWORKS | sed -e 's/-[[^ ]]*/,"&"/g' -e 's/^ *,//'`],
  [Framework flags for GLU, as a list of string literals.])

fi
fi
fi

if test x"$GL_BUILD_PACKAGE" = xyes; then
  BUILD_PACKAGE_BOOL=True
else
  BUILD_PACKAGE_BOOL=False
fi
AC_SUBST([BUILD_PACKAGE_BOOL])

case "$host" in
*-mingw32) CALLCONV=stdcall ;;
*)	CALLCONV=ccall ;;
esac
AC_SUBST([CALLCONV])

AC_CONFIG_FILES([config.mk OpenGL.buildinfo])
AC_OUTPUT
